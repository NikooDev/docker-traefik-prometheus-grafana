services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      # Traefik configuration
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/etc/traefik/dynamic_conf.yml"
      - "--entrypoints.websecure.address=:443"

      # Metrics configuration
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--entryPoints.metrics.address=:8890"
      - "--metrics.prometheus.entryPoint=metrics"
    ports:
      - "443:443" # Port SSL
      - "8890:8890" # Port metrics
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml"
      - "./private/nikolasdev.cer:/etc/traefik/private/cert.cer" # Certificat SSL
      - "./private/nikolasdev.key:/etc/traefik/private/privkey.key" # Clé privée
    networks:
      - "app-network"
    labels:
      - "traefik.enable=true"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - "app-network"

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_HTTP_AUTH_ENABLED=true
    networks:
      - "app-network"

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    container_name: grafana
    restart: unless-stopped
    volumes:
      - "grafana-storage:/var/lib/grafana"
      - "./grafana/provisioning/:/etc/grafana/provisioning/"
    environment:
      - "GF_SERVER_ROOT_URL=http://www.nikolasdev.com/"
      - "GF_SECURITY_ADMIN_USER=admin"
      - "GF_SECURITY_ADMIN_PASSWORD=admin"
    ports:
      - "3000:3000"
    networks:
      - "app-network"

  k6:
    image: grafana/k6:latest
    container_name: k6
    restart: on-failure
    command: run /scripts/test.js --out influxdb=http://admin:admin@influxdb:8086/k6
    depends_on:
      - influxdb
    entrypoint: ["k6"]
    volumes:
      - "./k6:/scripts"
    networks:
      - "app-network"

  crowdsec:
    image: crowdsecurity/crowdsec
    container_name: crowdsec
    restart: always
    command:
      - "cscli collections install crowdsecurity/nginx"
    environment:
      COLLECTIONS: "crowdsecurity/nginx"
      GID: "${GID-1000}"
    volumes:
      - "logs:/var/log/nginx:rw"
      - "./crowdsec/crowdsec-db:/var/lib/crowdsec/data:rw"
      - "./crowdsec/crowdsec-config:/etc/crowdsec:rw"
      - "./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - "app-network"

volumes:
  influxdb-data:
  grafana-storage: {}
  logs:
  crowdsec-db:
  crowdsec-config:

networks:
  app-network:
    external: true